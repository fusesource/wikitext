<?xml version="1.0" encoding="UTF-8"?>
<project name="buildHelper" default="" basedir=".">
	<import file="getDependenciesHelper.xml"/>

	<target name="forEach">
		<antcall target="e3.3"/>
		<antcall target="e3.4"/>
		<antcall target="e3.5"/>
	</target>

	<target name="e3.3" unless="skip3.3">
		<antcall target="${call}">
			<param name="eclipse.version" value="3.3"/>
			<param name="eclipse.url" value="${eclipse.url.3.3}"/>
			<param name="eclipse.sdk.version" value="${eclipse.sdk.3.3}"/>
		</antcall>
	</target>

	<target name="e3.4" unless="skip3.4">
		<antcall target="${call}">
			<param name="eclipse.version" value="3.4"/>
			<param name="eclipse.url" value="${eclipse.url.3.4}"/>
			<param name="eclipse.sdk.version" value="${eclipse.sdk.3.4}"/>
		</antcall>
	</target>
		
	<target name="e3.5" unless="skip3.5">
		<antcall target="${call}">
			<param name="eclipse.version" value="3.5"/>
			<param name="eclipse.url" value="${eclipse.url.3.5}"/>
			<param name="eclipse.sdk.version" value="${eclipse.sdk.3.5}"/>
		</antcall>
	</target>

	<target name="copy-maps-helper">
		<copy todir="${build.home}/${eclipse.version}/maps">
			<fileset dir="${basedir}/maps">
				<include name="*.map"/>
			</fileset>
		</copy>
		<delete>
			<fileset dir="${build.home}/${eclipse.version}/maps" includes="mylyn*.map">
				<exclude name="*${eclipse.version}.map"/>
			</fileset>
		</delete>
	</target>

	<target name="build-helper" depends="copy-maps-helper">
    	<property name="timeout" value="3600000" />
		<property name="application" value="org.eclipse.ant.core.antRunner" />
    	<property name="eclipse.home" value="${eclipse.base}/sdk-${eclipse.sdk.version}/eclipse" />
		<property name="vmargs" value=" -Xms40m -Xmx256m"/>    	
    	<path id="pde.build.script.id"> 
    		<fileset dir="${eclipse.home}/plugins">
            	<include name="org.eclipse.pde.build_*/scripts/build.xml"/>
          	</fileset>
    	</path> 
    	<property name="pde.build.script" refid="pde.build.script.id"/>
  	    <condition property="versionPostfix" value="e33" else="e3x"><equals arg1="${eclipse.version}" arg2="3.3"/></condition>
    	<property name="log" value="${build.results}/build-${eclipse.version}.log" />
		
		<echo message="Building ${version}.${qualifier}-${versionPostfix} on Eclipse ${eclipse.sdk.version}" />
		<echo message="Output is logged to ${log}" />
    	<java fork="true" dir="." timeout="${timeout}" logError="true" failonerror="true"  
    		classname="org.eclipse.core.launcher.Main" output="${log}">
	        <classpath>
	    		<fileset dir="${eclipse.home}/plugins">
	            	<include name="org.eclipse.equinox.launcher_*.jar"/>
	          	</fileset>
	        </classpath>
		    <arg value="-application"/>
    		<arg value="${application}"/>
    		<arg value="-buildfile"/>
    		<arg value="${pde.build.script}"/>
    		<arg value="-DbaseLocation=${eclipse.home}"/>    		
    		<arg value="-Dbuilder=${basedir}/config/${eclipse.version}"/>
    		<arg value="-DbuildDirectory=${build.home}/${eclipse.version}"/>
    		<arg value="-DforceContextQualifier=${qualifier}-${versionPostfix}"/>
    		<arg value="-DmylynQualifier=${qualifier}"/>
    		<arg value="-DmajorVersion=${version}"/>
		    <arg value="-consolelog"/>
		    <jvmarg line="${vmargs}"/>
		</java>
    </target>
	
	<target name="clean-build-helper">
		<delete dir="${build.home}/${eclipse.version}" />
	</target>

	<target name="clean-tests-helper">
    	<property name="eclipse.home" value="${eclipse.base}/test-${eclipse.sdk.version}/eclipse" />
		<delete dir="${eclipse.home}/results" />
		<delete failonerror="false">
			<fileset dir="${eclipse.home}" includes="org*.xml" />
		</delete>
		<delete dir="${eclipse.home}/plugins/org.eclipse.mylyn.tests"/>
	</target>

	<target name="report-helper">
		<property name="results.home" value="${build.results}/test-${eclipse.version}" />
		<mkdir dir="${results.home}" />
		
		<xslt style="${basedir}/scripts/JUNIT.XSL" basedir="${results.home}" includes="org*.xml" destdir="${results.home}" />

		<junitreport todir="${results.home}" >
			<fileset dir="${results.home}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="noframes" todir="${results.home}"/>
		</junitreport>
		<move file="${results.home}/junit-noframes.html" tofile="${results.home}/standalone-tests.html"/>
	</target>

	<target name="publish-helper">
    	<property name="eclipse.home" value="${eclipse.base}/test-${eclipse.sdk.version}/eclipse" />
		<java jar="${build.reporter.jar}" failonerror="false" fork="true" jvm="${build.reporter.jvm}">
<!--
			<classpath>
				<pathelement location="${build.reporter}" />
				<pathelement path="${java.class.path}" />
			</classpath>
-->
			<arg value="-in" />
			<arg value="${eclipse.home}/results/org.eclipse.mylyn.tests.AllTests.xml" />
			<arg value="-config" />
			<arg value="${build.reporter.config}" />
			<arg value="-build" />
			<arg value="${qualifier}" />
		</java>
	</target>
	
	<target name="get-build-dependencies-helper">
		<property name="downloadsDir" value="${eclipse.base}"/> 

		<!-- extract sdk for building -->
		<basename property="file.sdk" file="${eclipse.url}"/>
		<antcall target="getBundle">
			<param name="file" value="${file.sdk}" />
			<param name="url" value="${eclipse.url}"/>
		</antcall>
		<mkdir dir="${eclipse.base}/sdk-${eclipse.sdk.version}" />
		<antcall target="unpackBundle">
			<param name="file" value="${file.sdk}" />
			<param name="unpackDest" value="${eclipse.base}/sdk-${eclipse.sdk.version}"/>
			<param name="isUnpackedFile" value="${eclipse.base}/sdk-${eclipse.sdk.version}/eclipse"/>
		</antcall>
	</target>
		
	<target name="get-test-dependencies-helper" depends="get-build-dependencies-helper">
		<property name="downloadsDir" value="${eclipse.base}"/> 

		<!-- extract sdk for testing and install test framework -->
		<basename property="file.sdk" file="${eclipse.url}"/>
		<basename property="file.testframework" file="${eclipse.url.test}"/>
		<antcall target="getBundle">
			<param name="file" value="${file.testframework}" />
			<param name="url" value="${eclipse.url.test}"/>
		</antcall>
		<mkdir dir="${eclipse.base}/test-${eclipse.sdk.version}" />
		<antcall target="unpackBundle">
			<param name="file" value="${file.sdk}" />
			<param name="unpackDest" value="${eclipse.base}/test-${eclipse.sdk.version}"/>
			<param name="isUnpackedFile" value="${eclipse.base}/test-${eclipse.sdk.version}/eclipse"/>
		</antcall>
		<antcall target="unpackBundle">
			<param name="file" value="${file.testframework}" />
			<param name="unpackDest" value="${eclipse.base}/test-${eclipse.sdk.version}"/>
			<param name="isUnpackedFile" value="${eclipse.base}/test-${eclipse.sdk.version}/eclipse/plugins/org.eclipse.test_3.2.0"/>
		</antcall>
	</target>

	<target name="install-tests-helper">
    	<property name="eclipse.home" value="${eclipse.base}/test-${eclipse.sdk.version}/eclipse" />
  	    <condition property="install.dir" value="${eclipse.home}" else="${eclipse.home}/dropins/test"><equals arg1="${eclipse.version}" arg2="3.3"/></condition>
		
		<delete failonerror="false">
			<fileset dir="${install.dir}">
				<include name="features/org.eclipse.mylyn*/**"/>
				<include name="plugins/org.eclipse.mylyn*/**"/>
			</fileset>
		</delete>

		<unzip dest="${install.dir}">
			<fileset dir="${build.home}/${eclipse.version}/dist">
				<include name="*.zip"/>
				<exclude name="*sdk*"/>
			</fileset>
		</unzip>
	</target>

	<target name="tests-helper" depends="install-tests-helper">
    	<property name="timeout" value="3600000" />
		<property name="application" value="org.eclipse.ant.core.antRunner" />
    	<property name="eclipse.home" value="${eclipse.base}/test-${eclipse.sdk.version}/eclipse" />
		<property name="vmargs" value=" -Xms40m -Xmx256m"/>    	
    	<path id="library.id"> 
    		<fileset dir="${eclipse.home}/plugins">
            	<include name="org.eclipse.test_*/library.xml"/>
          	</fileset>
    	</path> 
    	<property name="library" refid="library.id"/>
		<condition property="script.test" value="${eclipse.home}/plugins/org.eclipse.mylyn.tests_0.0.0/test.xml" else="${eclipse.home}/dropins/test/plugins/org.eclipse.mylyn.tests_0.0.0/test.xml"><equals arg1="${eclipse.version}" arg2="3.3"/></condition>
    	<property name="log" value="${build.results}/test-${test.target}-${eclipse.version}.log" />
		
		<echo message="Testing ${test.target} ${version}.${qualifier} on Eclipse ${eclipse.sdk.version}" />
    	<java fork="true" dir="." timeout="${timeout}" logError="true" 
    		classname="org.eclipse.core.launcher.Main">
	        <classpath>
	    		<fileset dir="${eclipse.home}/plugins">
	            	<include name="org.eclipse.equinox.launcher_*.jar"/>
	          	</fileset>
	        </classpath>
		    <arg value="-application"/>
    		<arg value="${application}"/>
    		<arg value="-buildfile"/>
    		<arg value="${script.test}"/>
    		<arg value="-Dos=${build.os}"/>
    		<arg value="-Dws=${build.ws}"/>
    		<arg value="-Darch=${build.arch}"/>
    		<arg value="-Declipse-home=${eclipse.home}"/>    		
    		<arg value="-Dlibrary-file=${library}"/>
    		<arg value="-DextraVMargs= 
    	    -ea 
    	    -Declipse.perf.dbloc=${build.db} 
    	    -Declipse.perf.config=build=${qualifier};config=${build.host}-${eclipse.version};jvm=${java.version}
    	    -Declipse.perf.assertAgainst=build=${build.assertAgainst}
    	    -Dmylyn.credentials=${build.credentials}" />
		    <arg value="-consolelog"/>
    		<arg value="${test.target}"/>
		    <jvmarg line="${vmargs}"/>
		</java>
		
		<copy todir="${build.results}/test-${eclipse.version}">
			<fileset dir="${eclipse.home}/results"/>
		</copy>
    </target>

	<target name="standalone-tests-helper">
    	<property name="install.dir" value="${build.home}/standalone-tests" />
		<delete dir="${install.dir}"/>
		<antcall target="install-tests-helper"/>
		
    	<property name="timeout" value="3600000" />
    	<property name="eclipse.home" value="${eclipse.base}/test-${eclipse.sdk.version}/eclipse" />
		<property name="vmargs" value=" -Xms40m -Xmx256m"/>    	
    	<property name="log" value="${build.results}/test-standalone-${eclipse.version}.log" />
		<path id="tests.classpath">
			<fileset dir="${install.dir}">
				<include name="plugins/*.jar"/>
				<include name="plugins/*/*.jar"/>
			</fileset>
			<dirset dir="${install.dir}/plugins">
				<include name="*"/>
			</dirset>
			<fileset dir="${eclipse.home}/plugins">
				<include name="org.junit_*/junit.jar"/>
				<!--
				<include name="org.eclipse.core.jobs_*.jar"/>
				<include name="org.eclipse.core.net_*.jar"/>
				<include name="org.eclipse.core.runtime_*.jar"/>
				<include name="org.eclipse.equinox.common_*.jar"/>
				<include name="org.eclipse.osgi_*.jar"/>
				-->
				<include name="*.jar"/>				
			</fileset>
		</path>
		
		<property name="output.dir" value="${build.results}/test-${eclipse.version}"/>
		<mkdir dir="${output.dir}"/>
		
		<echo message="Testing standalone ${version}.${qualifier} on Eclipse ${eclipse.sdk.version}" />
		<junit printsummary="yes" haltonfailure="no" 
			failureproperty="junit_test_failed" fork="true" forkmode="once" maxmemory="256m">
			<classpath>
				<path refid="tests.classpath"/>
			</classpath>
			<formatter type="xml" />
			<test todir="${output.dir}" name="org.eclipse.mylyn.tests.AllStandaloneTests"/>
			<test todir="${output.dir}" name="org.eclipse.mylyn.wikitext.tests.HeadlessTests"/>
		</junit>
    </target>
	
	<target name="fix-permissions">
		<chmod perm="g+w">
			<fileset dir="${dir}"/>
		</chmod>
		<!--
		<chgrp group="${dist.group}">
			<fileset dir="${target.dir}"/>
		</chgrp>
		-->
		<exec executable="/bin/chgrp" failonerror="false">
			<arg value="-R"/>
			<arg value="${dist.group}"/>
			<arg value="${dir}"/>
		</exec>
	</target>

	<target name="pack-helper">
    	<property name="timeout" value="3600000" />
		<property name="application" value="org.eclipse.update.core.siteOptimizer" />
    	<property name="eclipse.home" value="${eclipse.base}/sdk-${eclipse.sdk.3.4}/eclipse" />
		<property name="vmargs" value=" -Xms40m -Xmx512m"/>    	
    	<property name="log" value="${build.results}/pack-${eclipse.version}.log" />
		
		<echo message="Packing update site ${dir}" />
		<echo message="Output is logged to ${log}" />
    	<java fork="true" dir="." timeout="${timeout}" logError="true" failonerror="true" 
    		classname="org.eclipse.core.launcher.Main" output="${log}">
	        <classpath>
	    		<fileset dir="${eclipse.home}/plugins">
	            	<include name="org.eclipse.equinox.launcher_*.jar"/>
	          	</fileset>
	        </classpath>
		    <arg value="-consolelog"/>
		    <arg value="-application"/>
    		<arg value="${application}"/>
    		<arg value="-jarProcessor"/>
    		<arg value="-verbose"/>    		
    		<arg value="-processAll"/>
    		<arg value="-repack"/>
    		<arg value="-pack"/>
    		<arg value="-outputDir"/>
    		<arg value="${dir}"/>
    		<arg value="${dir}"/>
		    <jvmarg line="${vmargs}"/>
		</java>
    </target>

	<target name="generate-metadata-helper">
    	<property name="timeout" value="3600000" />
		<property name="application" value="org.eclipse.equinox.p2.metadata.generator.EclipseGenerator" />
    	<property name="eclipse.home" value="${eclipse.base}/sdk-${eclipse.sdk.3.4}/eclipse" />
		<property name="vmargs" value=" -Xms40m -Xmx512m"/>    	
		
		<echo message="Generating P2 meta-data for ${dir}" />
    	<java fork="true" dir="." timeout="${timeout}" logError="true" failonerror="true" 
    		classname="org.eclipse.core.launcher.Main">
	        <classpath>
	    		<fileset dir="${eclipse.home}/plugins">
	            	<include name="org.eclipse.equinox.launcher_*.jar"/>
	          	</fileset>
	        </classpath>
		    <arg value="-consolelog"/>
		    <arg value="-application"/>
    		<arg value="${application}"/>
    		<arg value="-updateSite"/>
    		<arg value="${dir}"/>
    		<arg value="-site"/>
    		<arg value="file:${dir}/site.xml"/>
    		<arg value="-metadataRepository"/>
    		<arg value="file:${dir}"/>
    		<arg value="-metadataRepositoryName"/>
    		<arg value="${name}"/>
    		<arg value="-artifactRepository"/>
    		<arg value="file:${dir}"/>
    		<arg value="-artifactRepositoryName"/>
    		<arg value="${name}"/>
    		<arg value="-compress"/>
    		<arg value="-reusePack200Files"/>
    		<arg value="noDefaultIUs"/>
		    <jvmarg line="${vmargs}"/>
		</java>
    </target>

	<target name="package-helper">
    	<property name="timeout" value="3600000" />
		<property name="application" value="org.eclipse.ant.core.antRunner" />
    	<property name="eclipse.home" value="${eclipse.base}/sdk-${eclipse.sdk.version}/eclipse" />
		<property name="vmargs" value=" -Xms40m -Xmx256m"/>    	
    	<path id="pde.build.script.id"> 
    		<fileset dir="${eclipse.home}/plugins">
            	<include name="org.eclipse.pde.build_*/scripts/package.xml"/>
          	</fileset>
    	</path> 
    	<property name="pde.build.script" refid="pde.build.script.id"/>
    	<property name="log" value="${build.results}/package-${eclipse.version}.log" />
		
		<echo message="Packaging ${version}.${qualifier} on Eclipse ${eclipse.sdk.version}" />
		<echo message="Output is logged to ${log}" />
    	<java fork="true" dir="." timeout="${timeout}" logError="true" failonerror="true"  
    		classname="org.eclipse.core.launcher.Main">
	        <classpath>
	    		<fileset dir="${eclipse.home}/plugins">
	            	<include name="org.eclipse.equinox.launcher_*.jar"/>
	          	</fileset>
	        </classpath>
		    <arg value="-application"/>
    		<arg value="${application}"/>
    		<arg value="-buildfile"/>
    		<arg value="${pde.build.script}"/>
    		<arg value="-DpackagingInfo=${basedir}/packager"/>    		
		    <arg value="-consolelog"/>
		    <jvmarg line="${vmargs}"/>
		</java>
    </target>
</project>
