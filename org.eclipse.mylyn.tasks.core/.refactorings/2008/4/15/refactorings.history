<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename method &apos;org.eclipse.mylyn.tasks.core.RepositoryTaskData.getTaskId()&apos; to &apos;getId&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.RepositoryTaskData.getTaskId()&apos;&#x0A;- Renamed element: &apos;org.eclipse.mylyn.tasks.core.RepositoryTaskData.getId()&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getTaskId&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;org.eclipse.mylyn.tasks.core{RepositoryTaskData.java[RepositoryTaskData~getTaskId" name="getId" references="true" stamp="1207601851860" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;complete&apos; in &apos;org.eclipse.mylyn.tasks.core.RepositoryTaskData&apos; to &apos;partial&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.RepositoryTaskData.complete&apos;&#x0A;- Renamed element: &apos;org.eclipse.mylyn.tasks.core.RepositoryTaskData.partial&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings&#x0A;- Rename getter method for field&#x0A;- Rename setter method for field" delegate="false" deprecate="true" description="Rename field &apos;complete&apos;" flags="589826" getter="true" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;org.eclipse.mylyn.tasks.core{RepositoryTaskData.java[RepositoryTaskData^complete" name="partial" references="true" setter="true" stamp="1207605175878" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;org.eclipse.mylyn.tasks.core.TaskRepository.getUrl()&apos; to &apos;getRepositoryUrl&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.TaskRepository.getUrl()&apos;&#x0A;- Renamed element: &apos;org.eclipse.mylyn.tasks.core.TaskRepository.getRepositoryUrl()&apos;&#x0A;- Update references to refactored element&#x0A;- Keep original element as deprecated delegate to refactored element" delegate="true" deprecate="true" description="Rename method &apos;getUrl&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;org.eclipse.mylyn.tasks.core{TaskRepository.java[TaskRepository~getUrl" name="getRepositoryUrl" references="true" stamp="1207608833210" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;org.eclipse.mylyn.tasks.core.TaskRepository.setUrl(...)&apos; to &apos;setRepositoryUrl&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.TaskRepository.setUrl(...)&apos;&#x0A;- Renamed element: &apos;org.eclipse.mylyn.tasks.core.TaskRepository.setRepositoryUrl(...)&apos;&#x0A;- Update references to refactored element&#x0A;- Keep original element as deprecated delegate to refactored element" delegate="true" deprecate="true" description="Rename method &apos;setUrl&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;org.eclipse.mylyn.tasks.core{TaskRepository.java[TaskRepository~setUrl~QString;" name="setRepositoryUrl" references="true" stamp="1207608852755" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;org.eclipse.mylyn.tasks.core.RepositoryTaskData.getId()&apos; to &apos;getTaskId&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.RepositoryTaskData.getId()&apos;&#x0A;- Renamed element: &apos;org.eclipse.mylyn.tasks.core.RepositoryTaskData.getTaskId()&apos;&#x0A;- Update references to refactored element&#x0A;- Keep original element as deprecated delegate to refactored element" delegate="true" deprecate="true" description="Rename method &apos;getId&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;org.eclipse.mylyn.tasks.core{RepositoryTaskData.java[RepositoryTaskData~getId" name="getTaskId" references="true" stamp="1207608894954" version="1.0"/>&#x0A;<refactoring comment="Move 1 elements(s) to &apos;org.eclipse.mylyn.tasks.core/src/org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Destination element: &apos;org.eclipse.mylyn.tasks.core/src/org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.internal.tasks.core.AbstractAttributeMapper.java&apos;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;org.eclipse.mylyn.tasks.core" element1="/src&lt;org.eclipse.mylyn.internal.tasks.core{AbstractAttributeMapper.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1207718090629" units="1" version="1.0"/>&#x0A;<refactoring abstract="true" comment="Extract interface &apos;org.eclipse.mylyn.internal.tasks.core.ITaskDataManager&apos; from &apos;org.eclipse.mylyn.internal.tasks.core.TaskDataManager&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.internal.tasks.core.TaskDataManager&apos;&#x0A;- Extracted interface: &apos;org.eclipse.mylyn.internal.tasks.core.ITaskDataManager&apos;&#x0A;- Extracted members:&#x0A;     org.eclipse.mylyn.internal.tasks.core.TaskDataManager.getNewTaskData(...)&#x0A;- Use super type where possible" comments="true" description="Extract interface &apos;ITaskDataManager&apos;" element1="/src&lt;org.eclipse.mylyn.internal.tasks.core{TaskDataManager.java[TaskDataManager~getNewTaskData~QString;~QString;" flags="589830" id="org.eclipse.jdt.ui.extract.interface" input="/src&lt;org.eclipse.mylyn.internal.tasks.core{TaskDataManager.java[TaskDataManager" instanceof="false" name="ITaskDataManager" public="true" replace="true" stamp="1207719498799" version="1.0"/>&#x0A;<refactoring comment="Move 1 elements(s) to &apos;org.eclipse.mylyn.tasks.core/src/org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Destination element: &apos;org.eclipse.mylyn.tasks.core/src/org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.internal.tasks.core.ITaskDataManager.java&apos;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;org.eclipse.mylyn.tasks.core" element1="/src&lt;org.eclipse.mylyn.internal.tasks.core{ITaskDataManager.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1207719533170" units="1" version="1.0"/>&#x0A;<refactoring abstract="true" comment="Extract interface &apos;org.eclipse.mylyn.internal.tasks.core.sync.IRepositorySynchronizationManager&apos; from &apos;org.eclipse.mylyn.internal.tasks.core.sync.RepositorySynchronizationManager&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.internal.tasks.core.sync.RepositorySynchronizationManager&apos;&#x0A;- Extracted interface: &apos;org.eclipse.mylyn.internal.tasks.core.sync.IRepositorySynchronizationManager&apos;&#x0A;- Extracted members:&#x0A;     org.eclipse.mylyn.internal.tasks.core.sync.RepositorySynchronizationManager.saveIncoming(...)&#x0A;- Use super type where possible" comments="true" description="Extract interface &apos;IRepositorySynchronizationManager&apos;" element1="/src&lt;org.eclipse.mylyn.internal.tasks.core.sync{RepositorySynchronizationManager.java[RepositorySynchronizationManager~saveIncoming~QAbstractTask;~QRepositoryTaskData;~Z" flags="589830" id="org.eclipse.jdt.ui.extract.interface" input="/src&lt;org.eclipse.mylyn.internal.tasks.core.sync{RepositorySynchronizationManager.java[RepositorySynchronizationManager" instanceof="false" name="IRepositorySynchronizationManager" public="true" replace="true" stamp="1207719697254" version="1.0"/>&#x0A;<refactoring comment="Move 1 elements(s) to &apos;org.eclipse.mylyn.tasks.core/src/org.eclipse.mylyn.tasks.core.sync&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Destination element: &apos;org.eclipse.mylyn.tasks.core/src/org.eclipse.mylyn.tasks.core.sync&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.internal.tasks.core.sync.IRepositorySynchronizationManager.java&apos;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;org.eclipse.mylyn.tasks.core.sync" element1="/src&lt;org.eclipse.mylyn.internal.tasks.core.sync{IRepositorySynchronizationManager.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" log="/src&lt;org.eclipse.mylyn.tasks.core&#x09;/src&lt;org.eclipse.mylyn.tasks.core.sync" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1207719713614" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private void updateRepositoryConfiguration(final TaskRepository repository,AbstractRepositoryConnector connector,Set&lt;AbstractRepositoryQuery&gt; queries)&apos; from &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeRepositoriesJob.run()&apos; to &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeRepositoriesJob&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Method name: &apos;updateRepositoryConfiguration&apos;&#x0A;- Destination type: &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeRepositoriesJob&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;updateRepositoryConfiguration&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.eclipse.mylyn.internal.tasks.core.sync{SynchronizeRepositoriesJob.java" name="updateRepositoryConfiguration" replace="false" selection="3059 1270" stamp="1207786742888" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void updateRepositoryConfiguration(IProgressMonitor monitor,final TaskRepository repository,final AbstractRepositoryConnector connector) throws InterruptedException &apos; from &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeRepositoriesJob.run()&apos; to &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeRepositoriesJob&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Method name: &apos;updateRepositoryConfiguration&apos;&#x0A;- Destination type: &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeRepositoriesJob&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;updateRepositoryConfiguration&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.eclipse.mylyn.internal.tasks.core.sync{SynchronizeRepositoriesJob.java" name="updateRepositoryConfiguration" replace="false" selection="3091 777" stamp="1207787651018" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract local variable &apos;value&apos; from expression &apos;getValue(RepositoryTaskAttribute.PRIORITY)&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Variable name: &apos;value&apos;&#x0A;- Destination method: &apos;org.eclipse.mylyn.tasks.core.DefaultTaskSchema.getPriority()&apos;&#x0A;- Variable expression: &apos;getValue(RepositoryTaskAttribute.PRIORITY)&apos;" description="Extract local variable &apos;value&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;org.eclipse.mylyn.tasks.core{DefaultTaskSchema.java" name="value" replace="false" selection="3270 42" stamp="1207794313227" version="1.0"/>&#x0A;<refactoring comment="Change method &apos;public void org.eclipse.mylyn.tasks.core.AbstractRepositoryConnector.preSynchronization(SynchronizationEvent event, IProgressMonitor monitor) throws CoreException&apos; to &apos;public void preSynchronization(AbstractTaskCollector resultCollector, SynchronizationEvent event, IProgressMonitor monitor) throws CoreException&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.AbstractRepositoryConnector.preSynchronization(...)&apos;&#x0A;- Added parameters:&#x0A;     AbstractTaskCollector resultCollector" default1="abc" delegate="false" deprecate="true" description="Change method &apos;preSynchronization&apos;" element1="=org.eclipse.mylyn.web.tasks/\/usr\/local\/eclipse-3.4M6-20080408\/plugins\/org.eclipse.equinox.common_3.4.0.v20080407.jar&lt;org.eclipse.core.runtime(CoreException.class[CoreException" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/src&lt;org.eclipse.mylyn.tasks.core{AbstractRepositoryConnector.java[AbstractRepositoryConnector~preSynchronization~QSynchronizationEvent;~QIProgressMonitor;" kind1="0" name="preSynchronization" parameter1="{added} {added} -1 AbstractTaskCollector resultCollector false" parameter2="SynchronizationEvent event 0 SynchronizationEvent event false" parameter3="IProgressMonitor monitor 1 IProgressMonitor monitor false" stamp="1207796810220" version="1.0"/>&#x0A;<refactoring comment="Change method &apos;public void org.eclipse.mylyn.tasks.core.AbstractRepositoryConnector.postSynchronization(SynchronizationEvent event, IProgressMonitor monitor) throws CoreException&apos; to &apos;public void postSynchronization(AbstractTaskCollector resultCollector, SynchronizationEvent event, IProgressMonitor monitor) throws CoreException&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.AbstractRepositoryConnector.postSynchronization(...)&apos;&#x0A;- Added parameters:&#x0A;     AbstractTaskCollector resultCollector" default1="abc" delegate="false" deprecate="true" description="Change method &apos;postSynchronization&apos;" element1="=org.eclipse.mylyn.web.tasks/\/usr\/local\/eclipse-3.4M6-20080408\/plugins\/org.eclipse.equinox.common_3.4.0.v20080407.jar&lt;org.eclipse.core.runtime(CoreException.class[CoreException" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/src&lt;org.eclipse.mylyn.tasks.core{AbstractRepositoryConnector.java[AbstractRepositoryConnector~postSynchronization~QSynchronizationEvent;~QIProgressMonitor;" kind1="0" name="postSynchronization" parameter1="{added} {added} -1 AbstractTaskCollector resultCollector false" parameter2="SynchronizationEvent event 0 SynchronizationEvent event false" parameter3="IProgressMonitor monitor 1 IProgressMonitor monitor false" stamp="1207796840239" version="1.0"/>&#x0A;<refactoring comment="Change method &apos;public void org.eclipse.mylyn.tasks.core.AbstractRepositoryConnector.preSynchronization(AbstractTaskCollector resultCollector, SynchronizationEvent event, IProgressMonitor monitor) throws CoreException&apos; to &apos;public void preSynchronization(SynchronizationEvent event, IProgressMonitor monitor) throws CoreException&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.AbstractRepositoryConnector.preSynchronization(...)&apos;&#x0A;- Removed parameters:&#x0A;     AbstractTaskCollector resultCollector" delegate="false" deprecate="true" description="Change method &apos;preSynchronization&apos;" element1="=org.eclipse.mylyn.web.tasks/\/usr\/local\/eclipse-3.4M6-20080408\/plugins\/org.eclipse.equinox.common_3.4.0.v20080407.jar&lt;org.eclipse.core.runtime(CoreException.class[CoreException" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/src&lt;org.eclipse.mylyn.tasks.core{AbstractRepositoryConnector.java[AbstractRepositoryConnector~preSynchronization~QAbstractTaskCollector;~QSynchronizationEvent;~QIProgressMonitor;" kind1="0" name="preSynchronization" parameter1="AbstractTaskCollector resultCollector 0 {deleted} {deleted} true" parameter2="SynchronizationEvent event 1 SynchronizationEvent event false" parameter3="IProgressMonitor monitor 2 IProgressMonitor monitor false" stamp="1207797394303" version="1.0"/>&#x0A;<refactoring comment="Change method &apos;public void org.eclipse.mylyn.tasks.core.AbstractRepositoryConnector.postSynchronization(AbstractTaskCollector resultCollector, SynchronizationEvent event, IProgressMonitor monitor) throws CoreException&apos; to &apos;public void postSynchronization(SynchronizationEvent event, IProgressMonitor monitor) throws CoreException&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.AbstractRepositoryConnector.postSynchronization(...)&apos;&#x0A;- Removed parameters:&#x0A;     AbstractTaskCollector resultCollector" delegate="false" deprecate="true" description="Change method &apos;postSynchronization&apos;" element1="=org.eclipse.mylyn.web.tasks/\/usr\/local\/eclipse-3.4M6-20080408\/plugins\/org.eclipse.equinox.common_3.4.0.v20080407.jar&lt;org.eclipse.core.runtime(CoreException.class[CoreException" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/src&lt;org.eclipse.mylyn.tasks.core{AbstractRepositoryConnector.java[AbstractRepositoryConnector~postSynchronization~QAbstractTaskCollector;~QSynchronizationEvent;~QIProgressMonitor;" kind1="0" name="postSynchronization" parameter1="AbstractTaskCollector resultCollector 0 {deleted} {deleted} true" parameter2="SynchronizationEvent event 1 SynchronizationEvent event false" parameter3="IProgressMonitor monitor 2 IProgressMonitor monitor false" stamp="1207797406739" version="1.0"/>&#x0A;<refactoring abstract="0" comment="Pull up members from &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeQueriesJob&apos; to &apos;org.eclipse.mylyn.tasks.core.SynchronizeJob&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original elements:&#x0A;     org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeQueriesJob.synchronizeChangedTasks&#x0A;     org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeQueriesJob.setSynchronizeChangedTasks(...)&#x0A;- Destination type: &apos;org.eclipse.mylyn.tasks.core.SynchronizeJob&apos;&#x0A;- Use super type where possible" delete="1" description="Pull up members to &apos;SynchronizeJob&apos;" element1="/src&lt;org.eclipse.mylyn.internal.tasks.core.sync{SynchronizeQueriesJob.java[SynchronizeQueriesJob^synchronizeChangedTasks" element2="/src&lt;org.eclipse.mylyn.internal.tasks.core.sync{SynchronizeQueriesJob.java[SynchronizeQueriesJob~setSynchronizeChangedTasks~Z" element3="/src&lt;org.eclipse.mylyn.internal.tasks.core.sync{SynchronizeQueriesJob.java[SynchronizeQueriesJob~setSynchronizeChangedTasks~Z" flags="589830" id="org.eclipse.jdt.ui.pull.up" input="/src&lt;org.eclipse.mylyn.tasks.core{SynchronizeJob.java[SynchronizeJob" instanceof="false" pull="2" replace="true" stamp="1207799991923" stubs="true" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;synchronizeChangedTasks&apos; in &apos;org.eclipse.mylyn.tasks.core.SynchronizeJob&apos; to &apos;changedTasksSynchronization&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.SynchronizeJob.synchronizeChangedTasks&apos;&#x0A;- Renamed element: &apos;org.eclipse.mylyn.tasks.core.SynchronizeJob.changedTasksSynchronization&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings&#x0A;- Rename getter method for field&#x0A;- Rename setter method for field" delegate="false" deprecate="true" description="Rename field &apos;synchronizeChangedTasks&apos;" flags="589826" getter="true" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;org.eclipse.mylyn.tasks.core{SynchronizeJob.java[SynchronizeJob^synchronizeChangedTasks" name="changedTasksSynchronization" references="true" setter="true" stamp="1207800064751" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;tasks2&apos; from expression &apos;repToTasks.get(taskRepository)&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Variable name: &apos;tasks2&apos;&#x0A;- Destination method: &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeAllTasksJob.run()&apos;&#x0A;- Variable expression: &apos;repToTasks.get(taskRepository)&apos;" description="Extract local variable &apos;tasks2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;org.eclipse.mylyn.internal.tasks.core.sync{SynchronizeAllTasksJob.java" name="tasks2" replace="false" selection="2895 30" stamp="1207802591963" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;rule&apos; from expression &apos;new MutexRule(repository)&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Variable name: &apos;rule&apos;&#x0A;- Destination method: &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeQueriesJob.run()&apos;&#x0A;- Variable expression: &apos;new MutexRule(repository)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;rule&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;org.eclipse.mylyn.internal.tasks.core.sync{SynchronizeQueriesJob.java" name="rule" replace="true" selection="5504 25" stamp="1207805758219" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Extract method &apos;private void firePreSynchronization(IProgressMonitor monitor,SynchronizationEvent event)&apos; from &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeQueriesJob.run()&apos; to &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeQueriesJob&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Method name: &apos;firePreSynchronization&apos;&#x0A;- Destination type: &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeQueriesJob&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;firePreSynchronization&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.eclipse.mylyn.internal.tasks.core.sync{SynchronizeQueriesJob.java" name="firePreSynchronization" replace="false" selection="5910 462" stamp="1207870005541" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void firePostSynchronization(IProgressMonitor monitor,SynchronizationEvent event)&apos; from &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeQueriesJob.run()&apos; to &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeQueriesJob&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Method name: &apos;firePostSynchronization&apos;&#x0A;- Destination type: &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeQueriesJob&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;firePostSynchronization&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.eclipse.mylyn.internal.tasks.core.sync{SynchronizeQueriesJob.java" name="firePostSynchronization" replace="false" selection="7247 333" stamp="1207870088958" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void synchronizeQueries(IProgressMonitor monitor,SynchronizationEvent event)&apos; from &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeQueriesJob.run()&apos; to &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeQueriesJob&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Method name: &apos;synchronizeQueries&apos;&#x0A;- Destination type: &apos;org.eclipse.mylyn.internal.tasks.core.sync.SynchronizeQueriesJob&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;synchronizeQueries&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.eclipse.mylyn.internal.tasks.core.sync{SynchronizeQueriesJob.java" name="synchronizeQueries" replace="false" selection="6083 445" stamp="1207870197098" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Change method &apos;public void org.eclipse.mylyn.tasks.core.ITaskActivityListener.activityChanged(ScheduledTaskContainer week)&apos; to &apos;public void activityChanged()&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.ITaskActivityListener.activityChanged(...)&apos;&#x0A;- Removed parameters:&#x0A;     ScheduledTaskContainer week" delegate="false" deprecate="true" description="Change method &apos;activityChanged&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/src&lt;org.eclipse.mylyn.tasks.core{ITaskActivityListener.java[ITaskActivityListener~activityChanged~QScheduledTaskContainer;" name="activityChanged" parameter1="ScheduledTaskContainer week 0 {deleted} {deleted} true" stamp="1207945984427" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete 1 element(s) from project &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.ITaskActivityListener2.java&apos;" description="Delete element" element1="/src&lt;org.eclipse.mylyn.tasks.core{ITaskActivityListener2.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1207946021360" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Move 1 elements(s) to &apos;org.eclipse.mylyn.tasks.core/src/org.eclipse.mylyn.internal.tasks.core&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Destination element: &apos;org.eclipse.mylyn.tasks.core/src/org.eclipse.mylyn.internal.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.TaskRepositoryManager.java&apos;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;org.eclipse.mylyn.internal.tasks.core" element1="/src&lt;org.eclipse.mylyn.tasks.core{TaskRepositoryManager.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1207961471992" units="1" version="1.0"/>&#x0A;<refactoring abstract="true" comment="Extract interface &apos;org.eclipse.mylyn.internal.tasks.core.ITaskRepositoryManager&apos; from &apos;org.eclipse.mylyn.internal.tasks.core.TaskRepositoryManager&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.internal.tasks.core.TaskRepositoryManager&apos;&#x0A;- Extracted interface: &apos;org.eclipse.mylyn.internal.tasks.core.ITaskRepositoryManager&apos;&#x0A;- Extracted members:&#x0A;     org.eclipse.mylyn.internal.tasks.core.TaskRepositoryManager.getRepositoryConnector(...)&#x0A;     org.eclipse.mylyn.internal.tasks.core.TaskRepositoryManager.getRepositoryConnector(...)&#x0A;     org.eclipse.mylyn.internal.tasks.core.TaskRepositoryManager.addRepository(...)&#x0A;     org.eclipse.mylyn.internal.tasks.core.TaskRepositoryManager.addListener(...)&#x0A;     org.eclipse.mylyn.internal.tasks.core.TaskRepositoryManager.removeListener(...)&#x0A;     org.eclipse.mylyn.internal.tasks.core.TaskRepositoryManager.getRepository(...)&#x0A;     org.eclipse.mylyn.internal.tasks.core.TaskRepositoryManager.getRepository(...)&#x0A;     org.eclipse.mylyn.internal.tasks.core.TaskRepositoryManager.getRepositories(...)&#x0A;     org.eclipse.mylyn.internal.tasks.core.TaskRepositoryManager.getRepository(...)&#x0A;- Use super type where possible&#x0A;- Use super type in &apos;instanceof&apos; expressions" comments="true" description="Extract interface &apos;ITaskRepositoryManager&apos;" element1="/src&lt;org.eclipse.mylyn.internal.tasks.core{TaskRepositoryManager.java[TaskRepositoryManager~getRepositoryConnector~QString;" element2="/src&lt;org.eclipse.mylyn.internal.tasks.core{TaskRepositoryManager.java[TaskRepositoryManager~getRepositoryConnector~QAbstractTask;" element3="/src&lt;org.eclipse.mylyn.internal.tasks.core{TaskRepositoryManager.java[TaskRepositoryManager~addRepository~QTaskRepository;~QString;" element4="/src&lt;org.eclipse.mylyn.internal.tasks.core{TaskRepositoryManager.java[TaskRepositoryManager~addListener~QITaskRepositoryListener;" element5="/src&lt;org.eclipse.mylyn.internal.tasks.core{TaskRepositoryManager.java[TaskRepositoryManager~getRepository~QString;~QString;Listener;" element6="/src&lt;org.eclipse.mylyn.internal.tasks.core{TaskRepositoryManager.java[TaskRepositoryManager~getRepository~QString;~QString;" element7="/src&lt;org.eclipse.mylyn.internal.tasks.core{TaskRepositoryManager.java[TaskRepositoryManager~getRepositories~QStrin" element8="/src&lt;org.eclipse.mylyn.internal.tasks.core{TaskRepositoryManager.java[TaskRepositoryManager~getRepositories~QString;" element9="/src&lt;org.eclipse.mylyn.internal.tasks.core{TaskRepositoryManager.java[TaskRepositoryManager~getRepository~QAbstractTask;" flags="589830" id="org.eclipse.jdt.ui.extract.interface" input="/src&lt;org.eclipse.mylyn.internal.tasks.core{TaskRepositoryManager.java[TaskRepositoryManager" instanceof="true" name="ITaskRepositoryManager" public="true" replace="true" stamp="1207977024703" version="1.0"/>&#x0A;<refactoring comment="Move 1 elements(s) to &apos;org.eclipse.mylyn.tasks.core/src/org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Destination element: &apos;org.eclipse.mylyn.tasks.core/src/org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.internal.tasks.core.ITaskRepositoryManager.java&apos;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;org.eclipse.mylyn.tasks.core" element1="/src&lt;org.eclipse.mylyn.internal.tasks.core{ITaskRepositoryManager.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1207977127070" units="1" version="1.0"/>
</session>