<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring abstract="true" comment="Extract interface &apos;org.eclipse.mylyn.tasks.core.ITaskActivationListener&apos; from &apos;org.eclipse.mylyn.tasks.core.ITaskActivityListener&apos;&#x0D;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0D;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.ITaskActivityListener&apos;&#x0D;&#x0A;- Extracted interface: &apos;org.eclipse.mylyn.tasks.core.ITaskActivationListener&apos;&#x0D;&#x0A;- Extracted members:&#x0D;&#x0A;     org.eclipse.mylyn.tasks.core.ITaskActivityListener.preTaskActivated(...)&#x0D;&#x0A;     org.eclipse.mylyn.tasks.core.ITaskActivityListener.preTaskDeactivated(...)&#x0D;&#x0A;     org.eclipse.mylyn.tasks.core.ITaskActivityListener.taskActivated(...)&#x0D;&#x0A;     org.eclipse.mylyn.tasks.core.ITaskActivityListener.taskDeactivated(...)&#x0D;&#x0A;- Use super type where possible" comments="true" description="Extract interface &apos;ITaskActivationListener&apos;" element1="/src&lt;org.eclipse.mylyn.tasks.core{ITaskActivityListener.java[ITaskActivityListener~preTaskActivated~QITask;" element2="/src&lt;org.eclipse.mylyn.tasks.core{ITaskActivityListener.java[ITaskActivityListener~preTaskDeactivated~QITask;" element3="/src&lt;org.eclipse.mylyn.tasks.core{ITaskActivityListener.java[ITaskActivityListener~taskActivated~QITask;" element4="/src&lt;org.eclipse.mylyn.tasks.core{ITaskActivityListener.java[ITaskActivityListener~taskDeactivated~QITask;" flags="589830" id="org.eclipse.jdt.ui.extract.interface" input="/src&lt;org.eclipse.mylyn.tasks.core{ITaskActivityListener.java[ITaskActivityListener" instanceof="false" name="ITaskActivationListener" public="true" replace="true" stamp="1211829852956" version="1.0"/>&#x0A;<refactoring abstract="0" comment="Extract superclass &apos;org.eclipse.mylyn.tasks.core.TaskActivationAdapter&apos; from &apos;org.eclipse.mylyn.tasks.core.TaskActivityAdapter&apos;&#x0D;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0D;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.TaskActivityAdapter&apos;&#x0D;&#x0A;- Sub types:&#x0D;&#x0A;     org.eclipse.mylyn.tasks.core.TaskActivityAdapter&#x0D;&#x0A;- Extracted class: &apos;org.eclipse.mylyn.tasks.core.TaskActivationAdapter&apos;&#x0D;&#x0A;- Extracted members:&#x0D;&#x0A;     org.eclipse.mylyn.tasks.core.TaskActivityAdapter.preTaskActivated(...)&#x0D;&#x0A;     org.eclipse.mylyn.tasks.core.TaskActivityAdapter.preTaskDeactivated(...)&#x0D;&#x0A;     org.eclipse.mylyn.tasks.core.TaskActivityAdapter.taskActivated(...)&#x0D;&#x0A;     org.eclipse.mylyn.tasks.core.TaskActivityAdapter.taskDeactivated(...)&#x0D;&#x0A;- Use super type where possible" delete="4" description="Extract superclass &apos;TaskActivationAdapter&apos;" element1="/src&lt;org.eclipse.mylyn.tasks.core{TaskActivityAdapter.java[TaskActivityAdapter~preTaskActivated~QITask;" element2="/src&lt;org.eclipse.mylyn.tasks.core{TaskActivityAdapter.java[TaskActivityAdapter~preTaskDeactivated~QITask;" element3="/src&lt;org.eclipse.mylyn.tasks.core{TaskActivityAdapter.java[TaskActivityAdapter~taskActivated~QITask;" element4="/src&lt;org.eclipse.mylyn.tasks.core{TaskActivityAdapter.java[TaskActivityAdapter~taskDeactivated~QITask;" element5="/src&lt;org.eclipse.mylyn.tasks.core{TaskActivityAdapter.java[TaskActivityAdapter~preTaskActivated~QITask;" element6="/src&lt;org.eclipse.mylyn.tasks.core{TaskActivityAdapter.java[TaskActivityAdapter~taskActivated~QITask;Task;" element7="/src&lt;org.eclipse.mylyn.tasks.core{TaskActivityAdapter.java[TaskActivityAdapter~taskActivated~QITask;" element8="/src&lt;org.eclipse.mylyn.tasks.core{TaskActivityAdapter.java[TaskActivityAdapter~taskDeactivated~QITask;" element9="/src&lt;org.eclipse.mylyn.tasks.core{TaskActivityAdapter.java[TaskActivityAdapter" extract="4" flags="589830" id="org.eclipse.jdt.ui.extract.superclass" input="/src&lt;org.eclipse.mylyn.tasks.core{TaskActivityAdapter.java[TaskActivityAdapter" instanceof="false" name="TaskActivationAdapter" replace="true" stamp="1211830026173" stubs="true" types="1" version="1.0"/>&#x0A;<refactoring comment="Change method &apos;public boolean org.eclipse.mylyn.tasks.core.AbstractRepositoryConnector.hasChanged(ITask task, TaskData taskData)&apos; to &apos;public boolean hasChanged(TaskRepository taskRepository, ITask task, TaskData taskData)&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.AbstractRepositoryConnector.hasChanged(...)&apos;&#x0A;- Added parameters:&#x0A;     TaskRepository taskRepository" default1="xxx" delegate="false" deprecate="true" description="Change method &apos;hasChanged&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/src&lt;org.eclipse.mylyn.tasks.core{AbstractRepositoryConnector.java[AbstractRepositoryConnector~hasChanged~QITask;~QTaskData;" name="hasChanged" parameter1="{added} {added} -1 TaskRepository taskRepository false" parameter2="ITask task 0 ITask task false" parameter3="TaskData taskData 1 TaskData taskData false" stamp="1211838373549" version="1.0"/>&#x0A;<refactoring comment="Change method &apos;public void org.eclipse.mylyn.tasks.core.data.ITaskDataWorkingCopy.save(Set&lt;TaskAttribute&gt; edits, IProgressMonitor monitor) throws CoreException&apos; to &apos;public void save(Set&lt;TaskAttribute&gt; edits, IProgressMonitor monitor) throws CoreException&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.data.ITaskDataWorkingCopy.save(...)&apos;" delegate="false" deprecate="true" description="Change method &apos;save&apos;" element1="=org.eclipse.mylyn.tasks.ui/\/usr\/local\/eclipse-3.4RC2\/plugins\/org.eclipse.equinox.common_3.4.0.v20080421-2006.jar&lt;org.eclipse.core.runtime(CoreException.class[CoreException" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/src&lt;org.eclipse.mylyn.tasks.core.data{ITaskDataWorkingCopy.java[ITaskDataWorkingCopy~save~QIProgressMonitor;~QSet\&lt;QTaskAttribute;&gt;;" kind1="0" name="save" parameter1="Set&lt;TaskAttribute&gt; edits 1 Set&lt;TaskAttribute&gt; edits false" parameter2="IProgressMonitor monitor 0 IProgressMonitor monitor false" stamp="1211844956044" version="1.0"/>&#x0A;<refactoring comment="Change method &apos;public boolean org.eclipse.mylyn.tasks.core.data.AbstractTaskDataHandler.canInitializeSubTaskData(ITask task)&apos; to &apos;public boolean canInitializeSubTaskData(TaskRepository taskRepository, ITask task)&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.data.AbstractTaskDataHandler.canInitializeSubTaskData(...)&apos;&#x0A;- Added parameters:&#x0A;     TaskRepository taskRepository" default1="null" delegate="false" deprecate="true" description="Change method &apos;canInitializeSubTaskData&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/src&lt;org.eclipse.mylyn.tasks.core.data{AbstractTaskDataHandler.java[AbstractTaskDataHandler~canInitializeSubTaskData~QITask;" name="canInitializeSubTaskData" parameter1="{added} {added} -1 TaskRepository taskRepository false" parameter2="ITask task 0 ITask task false" stamp="1211850280143" version="1.0"/>&#x0A;<refactoring comment="Change method &apos;public boolean org.eclipse.mylyn.tasks.core.data.AbstractTaskDataHandler.canGetMultiTaskData()&apos; to &apos;public boolean canGetMultiTaskData(TaskRepository taskRepository)&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.data.AbstractTaskDataHandler.canGetMultiTaskData()&apos;&#x0A;- Added parameters:&#x0A;     TaskRepository taskRepository" default1="null" delegate="false" deprecate="true" description="Change method &apos;canGetMultiTaskData&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/src&lt;org.eclipse.mylyn.tasks.core.data{AbstractTaskDataHandler.java[AbstractTaskDataHandler~canGetMultiTaskData" name="canGetMultiTaskData" parameter1="{added} {added} -1 TaskRepository taskRepository false" stamp="1211850295478" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;org.eclipse.mylyn.tasks.core&apos;&#x0D;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     org.eclipse.mylyn.internal.tasks.core.ScheduledTaskContainer.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;org.eclipse.mylyn.internal.tasks.core{ScheduledTaskContainer.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1212020604558" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;org.eclipse.mylyn.tasks.core.sync.TaskJob.getErrorStatus()&apos; to &apos;getStatus&apos;&#x0D;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0D;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.sync.TaskJob.getErrorStatus()&apos;&#x0D;&#x0A;- Renamed element: &apos;org.eclipse.mylyn.tasks.core.sync.TaskJob.getStatus()&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getErrorStatus&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;org.eclipse.mylyn.tasks.core.sync{TaskJob.java[TaskJob~getErrorStatus" name="getStatus" references="true" stamp="1212021167614" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;org.eclipse.mylyn.tasks.core.ITask.getErrorStatus()&apos; to &apos;getStatus&apos;&#x0D;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0D;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.ITask.getErrorStatus()&apos;&#x0D;&#x0A;- Renamed element: &apos;org.eclipse.mylyn.tasks.core.ITask.getStatus()&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getErrorStatus&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;org.eclipse.mylyn.tasks.core{ITask.java[ITask~getErrorStatus" name="getStatus" references="true" stamp="1212021582780" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;org.eclipse.mylyn.tasks.core.TaskRepository.getErrorStatus()&apos; to &apos;getStatus&apos;&#x0D;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0D;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.TaskRepository.getErrorStatus()&apos;&#x0D;&#x0A;- Renamed element: &apos;org.eclipse.mylyn.tasks.core.TaskRepository.getStatus()&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getErrorStatus&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;org.eclipse.mylyn.tasks.core{TaskRepository.java[TaskRepository~getErrorStatus" name="getStatus" references="true" stamp="1212021634900" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;org.eclipse.mylyn.tasks.core.TaskRepository.setErrorStatus(...)&apos; to &apos;setStatus&apos;&#x0D;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0D;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.TaskRepository.setErrorStatus(...)&apos;&#x0D;&#x0A;- Renamed element: &apos;org.eclipse.mylyn.tasks.core.TaskRepository.setStatus(...)&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;setErrorStatus&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;org.eclipse.mylyn.tasks.core{TaskRepository.java[TaskRepository~setErrorStatus~QIStatus;" name="setStatus" references="true" stamp="1212021641516" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;org.eclipse.mylyn.internal.tasks.core.RepositoryQuery.getSynchronizationStatus()&apos; to &apos;getStatus&apos;&#x0D;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0D;&#x0A;- Original element: &apos;org.eclipse.mylyn.internal.tasks.core.RepositoryQuery.getSynchronizationStatus()&apos;&#x0D;&#x0A;- Renamed element: &apos;org.eclipse.mylyn.internal.tasks.core.RepositoryQuery.getStatus()&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getSynchronizationStatus&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;org.eclipse.mylyn.internal.tasks.core{RepositoryQuery.java[RepositoryQuery~getSynchronizationStatus" name="getStatus" references="true" stamp="1212022100199" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;org.eclipse.mylyn.internal.tasks.core.RepositoryQuery.setSynchronizationStatus(...)&apos; to &apos;setStatus&apos;&#x0D;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0D;&#x0A;- Original element: &apos;org.eclipse.mylyn.internal.tasks.core.RepositoryQuery.setSynchronizationStatus(...)&apos;&#x0D;&#x0A;- Renamed element: &apos;org.eclipse.mylyn.internal.tasks.core.RepositoryQuery.setStatus(...)&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;setSynchronizationStatus&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;org.eclipse.mylyn.internal.tasks.core{RepositoryQuery.java[RepositoryQuery~setSynchronizationStatus~QIStatus;" name="setStatus" references="true" stamp="1212022109569" version="1.0"/>&#x0A;<refactoring abstract="true" comment="Extract interface &apos;org.eclipse.mylyn.tasks.core.ITaskContainer&apos; from &apos;org.eclipse.mylyn.tasks.core.ITaskElement&apos;&#x0D;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0D;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.ITaskElement&apos;&#x0D;&#x0A;- Extracted interface: &apos;org.eclipse.mylyn.tasks.core.ITaskContainer&apos;&#x0D;&#x0A;- Extracted members:&#x0D;&#x0A;     org.eclipse.mylyn.tasks.core.ITaskElement.getChildren()&#x0D;&#x0A;- Use super type where possible&#x0D;&#x0A;- Use super type in &apos;instanceof&apos; expressions" comments="true" description="Extract interface &apos;ITaskContainer&apos;" element1="/src&lt;org.eclipse.mylyn.tasks.core{ITaskElement.java[ITaskElement~getChildren" flags="589830" id="org.eclipse.jdt.ui.extract.interface" input="/src&lt;org.eclipse.mylyn.tasks.core{ITaskElement.java[ITaskElement" instanceof="true" name="ITaskContainer" public="true" replace="true" stamp="1212028523630" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;org.eclipse.mylyn.tasks.core.ITaskElement&apos; to &apos;IRepositoryElement&apos;&#x0D;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0D;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.ITaskElement&apos;&#x0D;&#x0A;- Renamed element: &apos;org.eclipse.mylyn.tasks.core.IRepositoryElement&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update fully qualified names in &apos;*.xml, *.properties, *.exsd, *.mf&apos; files&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;ITaskElement&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;org.eclipse.mylyn.tasks.core{ITaskElement.java[ITaskElement" matchStrategy="1" name="IRepositoryElement" patterns="*.xml, *.properties, *.exsd, *.mf" qualified="true" references="true" similarDeclarations="false" stamp="1212028696769" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;org.eclipse.mylyn.internal.tasks.core.TaskList.getTaskContainers()&apos; to &apos;getTaskCategories&apos;&#x0D;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0D;&#x0A;- Original element: &apos;org.eclipse.mylyn.internal.tasks.core.TaskList.getTaskContainers()&apos;&#x0D;&#x0A;- Renamed element: &apos;org.eclipse.mylyn.internal.tasks.core.TaskList.getTaskCategories()&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getTaskContainers&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;org.eclipse.mylyn.internal.tasks.core{TaskList.java[TaskList~getTaskContainers" name="getTaskCategories" references="true" stamp="1212100946887" version="1.0"/>&#x0A;<refactoring comment="Encapsulate field &apos;org.eclipse.mylyn.tasks.core.TaskRepository.propertyChangeListeners&apos; in &apos;org.eclipse.mylyn.tasks.core.TaskRepository&apos;&#x0D;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0D;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.TaskRepository.propertyChangeListeners&apos;&#x0D;&#x0A;- Getter method name: &apos;getPropertyChangeListeners&apos;&#x0D;&#x0A;- Setter method name: &apos;setPropertyChangeListeners&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;propertyChangeListeners&apos;" flags="589830" getter="getPropertyChangeListeners" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;org.eclipse.mylyn.tasks.core{TaskRepository.java[TaskRepository^propertyChangeListeners" insertion="64" setter="setPropertyChangeListeners" stamp="1212113634318" version="1.0" visibility="1"/>&#x0A;<refactoring accessors="true" comment="Delete 1 element(s) from project &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Original element: &apos;org.eclipse.mylyn.tasks.core.ICapabilityContext.java&apos;" description="Delete element" element1="/src&lt;org.eclipse.mylyn.tasks.core{ICapabilityContext.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1212129003943" subPackages="false" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Extract method &apos;private void updateTaskFromTaskData(final TaskData taskData,final AbstractTask task,final AbstractRepositoryConnector connector,final TaskRepository repository,final boolean changed,final boolean[] elementChanged)&apos; from &apos;org.eclipse.mylyn.internal.tasks.core.data.TaskDataManager.putUpdatedTaskData().new ITaskListRunnable() {...}.execute()&apos; to &apos;org.eclipse.mylyn.internal.tasks.core.data.TaskDataManager.putUpdatedTaskData().new ITaskListRunnable() {...}&apos;&#x0A;- Original project: &apos;org.eclipse.mylyn.tasks.core&apos;&#x0A;- Method name: &apos;updateTaskFromTaskData&apos;&#x0A;- Destination type: &apos;org.eclipse.mylyn.internal.tasks.core.data.TaskDataManager.putUpdatedTaskData().new ITaskListRunnable() {...}&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;updateTaskFromTaskData&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.eclipse.mylyn.internal.tasks.core.data{TaskDataManager.java" name="updateTaskFromTaskData" replace="false" selection="8119 505" stamp="1212171086207" version="1.0" visibility="2"/>
</session>